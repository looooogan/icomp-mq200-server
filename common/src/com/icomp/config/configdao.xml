<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd ">
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/com/icomp/db.properties</value>
            </list>
        </property>
    </bean>
    <!--<bean id="dataSource" class="com.icomp.common.utils.XBasicDataSource" destroy-method="close">-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <!--url: 连接IP和数据库名称-->
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <!--username: 登录名称-->
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <!--password: 用户密码-->
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <!--maxActive: 最大连接数量-->
        <property name="maxActive">
            <value>${jdbc.maxActive}</value>
        </property>
        <!--minIdle: 最小空闲连接-->
        <property name="minIdle">
            <value>${jdbc.minIdle}</value>
        </property>
        <!--maxIdle: 最大空闲连接-->
        <property name="maxIdle">
            <value>${jdbc.maxIdle}</value>
        </property>
        <!--initialSize: 初始化连接-->
        <property name="initialSize">
            <value>${jdbc.initialSize}</value>
        </property>
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned">
            <value>${jdbc.logAbandoned}</value>
        </property>
        <!--removeAbandoned: 是否自动回收超时连接-->
        <property name="removeAbandoned">
            <value>${jdbc.removeAbandoned}</value>
        </property>
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->
        <property name="removeAbandonedTimeout">
            <value>${jdbc.removeAbandonedTimeout}</value>
        </property>
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->
        <property name="maxWait">
            <value>${jdbc.maxWait}</value>
        </property>
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->
        <property name="timeBetweenEvictionRunsMillis">
            <value>${jdbc.timeBetweenEvictionRunsMillis}</value>
        </property>
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun">
            <value>${jdbc.numTestsPerEvictionRun}</value>
        </property>
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->
        <property name="minEvictableIdleTimeMillis">
            <value>${jdbc.minEvictableIdleTimeMillis}</value>
        </property>
        <property name="validationQuery">
            <value>${jdbc.validationQuery}</value>
        </property>

    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>
    <bean id="transactionInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <!-- 这里的方法签名可以精确到方法, 先懒惰一下全配置上 -->
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <!-- 需要引入aop的命名空间 -->
    <aop:config proxy-target-class="true">
        <!-- 切入点指明了在所有方法产生事务拦截操作 -->
        <aop:pointcut id="serviceMethods"
                      expression="execution(* com.icomp..business.*.*(..))"/>
        <!-- 定义了将采用何种拦截操作，这里引用到 txAdvice -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>
    <!-- 需要引入tx的命名空间 -->
    <!-- 这是事务通知操作，使用的事务管理器引用自 transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 指定哪些方法需要加入事务，这里懒惰一下全部加入，可以使用通配符来只加入需要的方法 -->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 此处应注入ibatis配置文件，而非sqlMap文件，否则会出现“there is no statement.....异常” -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <!-- 1. 配置单个SqlMapConfig.xml, 使用configLocation属性-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>

        <property name="dataSource" ref="dataSource"/>
    </bean>
    <import resource="classpath:/com/icomp/config/commondao.xml"/>
    <import resource="classpath:/com/icomp/config/dao.xml"/>


</beans>